// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cfmobile/tile-migrations-generator/migrations"
)

type FakeProductVersionFetcher struct {
	FetchProductVersionStub        func(productPath string) (string, error)
	fetchProductVersionMutex       sync.RWMutex
	fetchProductVersionArgsForCall []struct {
		productPath string
	}
	fetchProductVersionReturns struct {
		result1 string
		result2 error
	}
}

func (fake *FakeProductVersionFetcher) FetchProductVersion(productPath string) (string, error) {
	fake.fetchProductVersionMutex.Lock()
	fake.fetchProductVersionArgsForCall = append(fake.fetchProductVersionArgsForCall, struct {
		productPath string
	}{productPath})
	fake.fetchProductVersionMutex.Unlock()
	if fake.FetchProductVersionStub != nil {
		return fake.FetchProductVersionStub(productPath)
	} else {
		return fake.fetchProductVersionReturns.result1, fake.fetchProductVersionReturns.result2
	}
}

func (fake *FakeProductVersionFetcher) FetchProductVersionCallCount() int {
	fake.fetchProductVersionMutex.RLock()
	defer fake.fetchProductVersionMutex.RUnlock()
	return len(fake.fetchProductVersionArgsForCall)
}

func (fake *FakeProductVersionFetcher) FetchProductVersionArgsForCall(i int) string {
	fake.fetchProductVersionMutex.RLock()
	defer fake.fetchProductVersionMutex.RUnlock()
	return fake.fetchProductVersionArgsForCall[i].productPath
}

func (fake *FakeProductVersionFetcher) FetchProductVersionReturns(result1 string, result2 error) {
	fake.FetchProductVersionStub = nil
	fake.fetchProductVersionReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

var _ migrations.ProductVersionFetcher = new(FakeProductVersionFetcher)
